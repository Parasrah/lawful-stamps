name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build assets
        run: yarn build

  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        
      - run: git fetch --prune --unshallow --tags

      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20200820_4d77513/install
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build assets
        run: yarn build

      - name: Compress assets
        run: |
          cd dist && zip -r out ./*

      - name: bump version
        run: |
          eval "$(nix print-dev-env)"
          bash ./scripts/bump-version.sh

      - name: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Version Buddy"
          git add VERSION
          git add module.json
          git add package.json
          git commit -m "bump version to $(cat VERSION)"
          git tag v$(cat VERSION)

      - uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: set env
        run: |
          echo "VERSION=$(cat VERSION | tr -d '\n')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/out.zip
          asset_name: lawful-stamps.zip
          asset_content_type: application/zip
